openapi: 3.0.0
info:
  title: Gatekeeper App
  description: Application to manage visitors for the residence.
  version: 1.0.0

servers:
  - url: http://localhost:8080

tags:
  - name: auth
    description: Auth operations
  - name: admin
    description: Admin operations
  - name: resident
    description: Resident operations
  - name: gatekeeper
    description: Gatekeeper operations
  - name: visitor
    description: Visitor operations
  - name: blacklist
    description: Blacklist operations


paths:
  /register:
    post:
      description: Endpoint to request user registration
      operationId: registerUser
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegistrationRequest'

      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /signin:
    post:
      description: Endpoint for user(Gatekeeper, Resident, Admin) login
      operationId: userLogin
      tags:
        - auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SigninRequest'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /signout:
    post:
      description: Endpoint for user(Gatekeeper, Resident, Admin) login
      operationId: userLogout
      tags:
        - auth
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/user:
    get:
      description: List all users
      operationId: getUsers
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UsersList'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/user/{userId}:
    parameters:
      - name: userId
        in: path
        required: true
        schema:
          type: integer
          format: int32

    get:
      description: Get user by ID
      operationId: getUserById
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UsersList'


        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      description: Update user by ID
      operationId: updateUserById
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
      responses:
        '200':
          description: Updated User
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      description: Delete user by ID
      operationId: deleteUserById
      tags:
        - admin
      responses:
        '200':
          description: Successful Deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/registration-request:
    get:
      description: List all registration requests
      operationId: getRegistrationRequests
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/UsersList'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /admin/registration-request/{requestId}:
    parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: integer
          format: int32

    get:
      description: Get registration request by ID
      operationId: getRegistrationReqById
      tags:
        - admin
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/UsersList'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      description: Manage registration request
      operationId: manageRegistrationRequest
      tags:
        - admin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageRegistrationRequest'
      responses:
        '200':
          description: Successful management
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /resident/visit-request:
    get:
      description: Endpoint to create visitor request
      operationId: getVisitRequestResident
      tags:
        - resident
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date

      responses:
        '200':
          description: List all visit requests
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ScheduleResponse'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    post:
      description: Endpoint to create visitor request
      operationId: createVisitRequest
      tags:
        - resident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitRequest'
      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /resident/visit-request/{requestId}:
    parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: integer
          format: int32

    get:
      description: Get vistor request by ID
      operationId: getVisitorReqByIdResident
      tags:
        - resident
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ScheduleResponse'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    put:
      description: Edit Visitor request
      operationId: modifyVisitRequest
      tags:
        - resident
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VisitRequest'
      responses:
        '200':
          description: Updated Visit
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    delete:
      description: Remove Visitor request
      operationId: removeVisitRequest
      tags:
        - resident
      responses:
        '200':
          description: Successful deletion
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /blacklist:
    get:
      description: List all blacklisted users
      operationId: getBlacklist
      tags:
        - blacklist
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/BlackList'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    post:
      description: List all blacklisted users
      operationId: blacklistUser
      tags:
        - blacklist

      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BlacklistRequest'

      responses:
        '201':
          description: CREATED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /gatekeeper/visit-request:
    get:
      description: Endpoint to create visitor request
      operationId: getVisitRequestGatekeeper
      tags:
        - gatekeeper
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date

      responses:
        '200':
          description: List all visit requests
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ScheduleResponse'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /gatekeeper/visit-request/{requestId}:
    parameters:
      - name: requestId
        in: path
        required: true
        schema:
          type: integer
          format: int32

    get:
      description: Get vistor request by ID
      operationId: getVisitReqByIdGatekeeper
      tags:
        - gatekeeper
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        $ref: '#/components/schemas/ScheduleResponse'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'
        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

    patch:
      description: Manage Visitor request by Gatekeeper
      operationId: manageVisitRequest
      tags:
        - gatekeeper
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ManageRegistrationRequest'
      responses:
        '200':
          description: Successful management
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GeneralSuccess'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'

  /visitor/visit-details:
    get:
      description: Endpoint to create visitor request
      operationId: getVisitDetails
      tags:
        - visitor
      parameters:
        - name: date
          in: query
          required: true
          schema:
            type: string
            format: date
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: email

      responses:
        '200':
          description: List all visit requests of that visitor
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/response'
                  - type: object
                    properties:
                      data:
                        type: array
                        items:
                          $ref: '#/components/schemas/ScheduleResponse'

        '400':
          description: BAD REQUEST
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestError'

        '401':
          description: UNAUTHORIZED
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnauthorizedError'

        '403':
          description: FORBIDDEN
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenError'

        '404':
          description: NOT FOUND
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundError'

        '500':
          description: INTERNAL SERVER ERROR
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerError'


components:
  schemas:

    response:
      type: object
      properties:
        success:
          type: boolean
        statusCode:
          type: integer
          format: int32
          minimum: 100
          maximum: 600

    age:
      type: integer
      format: int32
      minimum: 18
      maximum: 100

    email:
      type: string
      format: email

    password:
      type: string
      pattern: '^(?=.*[A-Z])(?=.*[a-z])(?=.*\d).{8,}$'

    gender:
      type: string
      pattern: 'male|female|others'

    mobileNumber:
      type: string
      pattern: '^[6789]\d{9}$'

    UserRegistrationRequest:
      type: object
      properties:
        userName:
          type: string
        email:
          $ref: '#/components/schemas/email'
        password:
          $ref: '#/components/schemas/password'
        age:
          $ref: '#/components/schemas/age'
        address:
          type: string
        gender:
          $ref: '#/components/schemas/gender'
        mobileNumber:
          $ref: '#/components/schemas/mobileNumber'
        userRole:
          type: string
          pattern: 'admin|resident|gatekeeper'
      required: [userName, email, password, age, address, gender, mobileNumber, userRole]

    SigninRequest:
      type: object
      properties:
        email:
          $ref: '#/components/schemas/email'
        password:
          type: string
      required: [email, password]

    UpdateUserRequest:
      type: object
      properties:
        userName:
          type: string
        email:
          $ref: '#/components/schemas/email'
        age:
          $ref: '#/components/schemas/age'
        address:
          type: string
        gender:
          $ref: '#/components/schemas/gender'
        mobileNumber:
          $ref: '#/components/schemas/mobileNumber'
        userRole:
          type: string
          pattern: 'admin|resident|gatekeeper'
      required: [userName, email, age, address, gender, mobileNumber, userRole]

    ManageRegistrationRequest:
      type: object
      properties:
        isApproved:
          type: boolean
      required: [isApproved]

    GeneralSuccess:
      allOf:
        - $ref: '#/components/schemas/response'
        - type: object
          properties:
            data:
              type: string

    UsersList:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userName:
          type: string
        email:
          $ref: '#/components/schemas/email'
        age:
          $ref: '#/components/schemas/age'
        address:
          type: string
        gender:
          $ref: '#/components/schemas/gender'
        mobileNumber:
          $ref: '#/components/schemas/mobileNumber'
        userRole:
          type: string
        isApproved:
          type: string
        approvedBy:
          $ref: '#/components/schemas/email'

    BlacklistRequest:
      type: object
      properties:
        userId:
          type: integer
          format: int32
      required: [userId]

    VisitRequest:
      type: object
      properties:
        visitorName:
          type: string
        email:
          $ref: '#/components/schemas/email'
        age:
          $ref: '#/components/schemas/age'
        address:
          type: string
        gender:
          $ref: '#/components/schemas/gender'
        mobileNumber:
          $ref: '#/components/schemas/mobileNumber'
        requestedDate:
          type: string
          format: Date
      required: [visitorName, email, age, address, gender, mobileNumber, requestedDate]

    BlackList:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        userName:
          type: string
        email:
          $ref: '#/components/schemas/email'
        blacklistedBy:
          $ref: '#/components/schemas/email'


    ScheduleResponse:
      type: object
      properties:
        requestId:
          type: integer
          format: int32
        visitorId:
          type: integer
          format: int32
        visitorName:
          type: string
        requestedDate:
          type: string
          format: date
        mobileNumber:
          $ref: '#/components/schemas/mobileNumber'
        gender:
          $ref: '#/components/schemas/gender'
        email:
          $ref: '#/components/schemas/email'
        passkey:
          type: string
        address:
          type: string
        isApproved:
          type: string
        requestedBy:
          $ref: '#/components/schemas/email'
        approvedBy:
          $ref: '#/components/schemas/email'


    #Errors
    BadRequestError:
      allOf:
        - $ref: '#/components/schemas/response'
        - type: object
          properties:
            data:
              type: string
              default: Sorry you've made a bad request
            statusCode:
              minimum: 400
              maximum: 400
            success:
              default: false

    UnauthorizedError:
      allOf:
        - $ref: '#/components/schemas/response'
        - type: object
          properties:
            data:
              type : string
              default : You are not authorized to access this resource
            statusCode:
              minimum: 401
              maximum: 401
            success:
              default: false

    ForbiddenError:
      allOf:
        - $ref: '#/components/schemas/response'
        - type: object
          properties:
            data:
              type : string
              default: You are forbidden to access this resource
            statusCode:
              minimum: 403
              maximum: 403
            success:
              default: false

    NotFoundError:
      allOf:
        - $ref: '#/components/schemas/response'
        - type: object
          properties:
            data:
              type : string
              default: Sorry! Resource not found
            statusCode:
              minimum: 404
              maximum: 404
            success:
              default: false

    InternalServerError:
      allOf:
        - $ref: '#/components/schemas/response'
        - type: object
          properties:
            data:
              type : string
              default: Something went wrong. Try again!
            statusCode:
              minimum: 500
              maximum: 500
            success:
              default: false
